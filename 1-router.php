<?php

/** Route - путиводитель */


/** У этого компонента, есть метод get 
 * который отрабатывает по адресу (URL).
 * Первый аргумент, должен быть адресом,
 * второй функцией
*/

Route::get('user', function() {
    return true;
});

/*
 * Также можно вместо функции, записать строку
 * Которая будет означать имя контроллера и метод
 */

Route::get('/user', 'UserController@index');


/*
 * Ещё можно передавать аргументы, 
 * которые будут находиться в скобках
 */

Route::get('/user{id}', 'UserController@index');

Route::get('/profile{id}/articleCategory{idCat}', 'UserController@index');

/*
 * Если аргумент не обязательно должен придти,
 * то можно поставить знак ?
 */

Route::get('/user{id?}', 'UserController@index');



/*
 * Можно задать условие
 * в котором будет проверка по регуляркам
 */

Route::get('user/{name}', function ($name) {
    
})->where('name', '[A-Za-z]+');


/*
 * Ещё можно сделать перенаправление 
 * из маршрута в маршрут
 */

 Route::get('user/profile', function () {
     
 })->name('profile'); 
 
 /** Будет искать маршрут*/
 
 Route::get('profile', function(){});
 
 
 /*
  * Если есть много маршрутов
  * у которых название начинается одинаково
  * их можно группировать
  */
 
  Route::prefix('admin')->group(function () { 
      Route::get('users', function () { 
          
        }); 
        
        Route::get('articles', function () { 
          
        }); 
        
      });

/////////////////////////////////////////////////////////////

/*
 * У этого компонента, ещё имеется метод перенаправления
 */

Route::redirect('/here', '/there', 301); 

/** Но обычно за место него, используют хелпер*/

////////////////////////////////////////////////////////////////

/*
 * Ещё есть метод view, который загрузит вид из второго аргумента
 */

Route::view('/welcome', 'welcome');


/*Так же в него можно передать переменные, что бы вывести их в шаблоне*/
Route::view('/welcome', 'welcome', ['name' => 'Taylor']);

/*Но обычно, вместо этого метода, так же используется хелпер*/
