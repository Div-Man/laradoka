<?php

/*
 * Существует несколько способов разбиения на страницы элементов. 
 * Самое простое - использовать метод paginate для построителя 
 * запросов или запроса Eloquent . Метод paginate автоматически 
 * выполняет настройку правильного ограничения и смещения на 
 * основе текущей страницы, просматриваемой пользователем. 
 * По умолчанию текущая страница определяется значением 
 * аргумента строки запроса page в HTTP-запросе. Конечно, 
 * это значение автоматически определяется Laravel, а 
 * также автоматически вставляется в ссылки, сгенерированные с помощью paginator.
 */

class UserController extends Controller
{
    public function index()
    {
        $users = DB::table('users')->paginate(15);
        return view('user.index', ['users' => $users]);
    }
}

////////////////////////////////////////////////

Paginating Eloquent Results

Вы также можете разбивать на страницы « Красноречивые» запросы. 
В этом примере мы будем разбивать страницу User на 15 элементов на страницу. 
Как вы можете видеть, синтаксис почти идентичен результирующим запрограммированным запросам:
    
 $users = App\User::paginate(15); 


///////////////////////////////////////////

Отображение результатов разбивки на страницы

<div class="container">
    @foreach ($users as $user)
        {{ $user->name }}
    @endforeach
</div>

{{ $users->links() }}

//////////////////////////////////////////////////

Настройка URI Paginator

Метод withPath позволяет настраивать URI, который 
используется для создания ссылок. Например, если вы хотите, 
чтобы paginator создавал такие ссылки, как  
http://example.com/custom/url?page=N , 
вы должны передать custom/url - withPath методу  withPath :
    
Route::get('users', function () {
    $users = App\User::paginate(15);

    $users->withPath('custom/url');
});


Добавление ссылок на разбиение на страницы
Вы можете добавить строку запроса ссылок на страницы, 
используя метод appends . Например, чтобы добавить sort=votes 
к каждой ссылке для разбивки на страницы, вы должны 
сделать следующий вызов для appends :
    
{{ $users->appends(['sort' => 'votes'])->links() }}


////////////////////////////////////

Что бы создать своё верстку пагинатора, можно указать 
вторым параметром шаблон этой вёрстки

{{ $paginator->links('view.name') }}


Второй способо, это экспортировать их в каталог 
resources/views/vendor с помощью vendor:publish :
    
php artisan vendor:publish --tag=laravel-pagination 
        
        
Эта команда поместит представления в каталог 
resources/views/vendor/pagination . Файл bootstrap-4.blade.php   
